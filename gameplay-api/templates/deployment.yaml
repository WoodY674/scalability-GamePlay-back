apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gameplay-api.fullname" . }}
  labels:
    {{- include "gameplay-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gameplay-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gameplay-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gameplay-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gameplay-db
  namespace: gameplay-api
  labels:
    app: gameplay-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gameplay-db
  template:
    metadata:
      labels:
        app: gameplay-db
    spec:
      containers:
        - name: mariadb
          image: bitnami/mariadb
          envFrom:
            - configMapRef:
                name: gameplay-env-config
          ports:
            - containerPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gameplay-api
  namespace: gameplay-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gameplay-api
      tier: gameplay-api
  template:
    metadata:
      labels:
        app: gameplay-api
        tier: gameplay-api
    spec:
      containers:
        - name: gameplay-api
          image: anthlr/scalabilite-gameplay-back:latest
          env:
            - name: THIS_IS_A_TEST
              value: gameplay-db
            - name: MYSQL_TYPE
              value: "mariadb"
            - name: THIS_IS_ANOTHER_TEST
              value: "$(GAMEPLAY_SQL_SERVICE_HOST)"
          envFrom:
            - configMapRef:
                name: gameplay-env-config
          ports:
            - containerPort: 3001
              name: gameplay-api
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
      volumes:
        - name: config-volume
